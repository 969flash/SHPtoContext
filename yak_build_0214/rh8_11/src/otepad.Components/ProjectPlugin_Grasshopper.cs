using System;
using System.IO;
using System.Text;
using SD = System.Drawing;

using Rhino;
using Grasshopper.Kernel;

namespace RhinoCodePlatform.Rhino3D.Projects.Plugin.GH
{
  public sealed class AssemblyInfo : GH_AssemblyInfo
  {
    static readonly string s_assemblyIconData = "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAOwgAADsIBFShKgAAAAdxJREFUSEullWlLFVEYgCfapISIImmzzRaSCloIgzJasaTFXFJbtRWSAi3UKBC/972P0R/tee6ZMc91Zpw794GH8965c8+Z+573vJM0cQbv4hXc4gW4idvxEj7BtziNL/AOHsU3uB9LuYWDeBFv4w/8hC72Ee/hDlyN946hkz/Dw5iLT+IEq3mFvzD7J1V4h7mLLOLmEDYYwWNouvq80AKTGKVrG5qKjBM4EcJG3k1XKxxA9yjCCztDmDxHb5KH2BvClhhHN38FN+8zHsQv2IGPsB/rcBnd1wgX+YZ/cR5vYF2O4MsQxpzF4RC2xS70bKzhJJq/drGKchfwC8tM9uJx7MasAKri74ZCGLMb/+AyemhM12u0yj6gZVuFrCNEXEPPwxRaBc104QDai9Y73c6zNYSB83g/hMkmnAthLlbbVyxa5CpeD2HAWs8mz+hBU1TERlzADY1P/zmNpjTCkpoJYcQezK2EFEv6cQgbnMKsxUQ8wKIqseGZDje30wtN+LSm1/aSWzXyPR2LMB2+K9wXe75PaY9y8t+4hD5IIT/TsQr70Bq3AR7CcziKpcymYx3suv6rUtpZwGpbd4H36VgHU+ThK+VpOtbBxmiDLOUCrnk5VMCy9SVVQpL8A+BNMBK62genAAAAAElFTkSuQmCC";
    static readonly string s_categoryIconData = "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAOwgAADsIBFShKgAAAARRJREFUOE+NkklKxUAQQFtUnHDAhQsRXQgqKi5cCS6+I844rwQP4Ak8hWf2vVQn5sd8kgePqibp7qSqUmYa7/EF1/ACX/EWr7M+e8dNHGIMfTherFL6xr1IW9nHg0iDXdyJtLh5EZ+L1WiOcDXSlDbwEGfxBifwDrt4y7HgHD9z9N+nsIsHnIw0+ED/z5r04RhXIg2s+FykvbjEpUgDC/OFtsquWEgLPArfqXDzCT4Vqz+20YPKFpdY8KtIY/N6pMWQWIc61qR5sL87E2njU8Ah8dA6y3iG3uzmeax4zLGOQ2KfHW+rbcF+0M+ubi45zbEN+2yrrLaH/dssWzl24ZAtRDrMIMcunLzWIetzgG1sdgJS+gVowRURoOq7TwAAAABJRU5ErkJggg==";

    public static readonly SD.Bitmap PluginIcon = default;
    public static readonly SD.Bitmap PluginCategoryIcon = default;

    static AssemblyInfo()
    {
      if (!s_assemblyIconData.Contains("ASSEMBLY-ICON"))
      {
        using (var aicon = new MemoryStream(Convert.FromBase64String(s_assemblyIconData)))
          PluginIcon = new SD.Bitmap(aicon);
      }

      if (!s_categoryIconData.Contains("ASSEMBLY-CATEGORY-ICON"))
      {
        using (var cicon = new MemoryStream(Convert.FromBase64String(s_categoryIconData)))
          PluginCategoryIcon = new SD.Bitmap(cicon);
      }
    }

    public override Guid Id { get; } = new Guid("802267d8-fb1a-40d5-b56a-63bfcbffdf7c");

    public override string AssemblyName { get; } = "otepad.Components";
    public override string AssemblyVersion { get; } = "0.1.2.9177";
    public override string AssemblyDescription { get; } = "Only Available in Korea , it's for V-World .shp file zip file ";
    public override string AuthorName { get; } = "Byun Sanghoon";
    public override string AuthorContact { get; } = "bsh960flash@snu.ac.kr";
    public override GH_LibraryLicense AssemblyLicense { get; } = GH_LibraryLicense.unset;
    public override SD.Bitmap AssemblyIcon { get; } = PluginIcon;
  }

  public class ProjectComponentPlugin : GH_AssemblyPriority
  {
    static readonly Guid s_projectId = new Guid("802267d8-fb1a-40d5-b56a-63bfcbffdf7c");
    static readonly string s_projectData = "";
    static readonly dynamic s_projectServer = default;
    static readonly object s_project = default;

    static ProjectComponentPlugin()
    {
      s_projectServer = ProjectInterop.GetProjectServer();
      if (s_projectServer is null)
      {
        RhinoApp.WriteLine($"Error loading Grasshopper plugin. Missing Rhino3D platform");
        return;
      }

      // get project
      dynamic dctx = ProjectInterop.CreateInvokeContext();
      dctx.Inputs["projectAssembly"] = typeof(ProjectComponentPlugin).Assembly;
      dctx.Inputs["projectId"] = s_projectId;
      dctx.Inputs["projectData"] = s_projectData;

      object project = default;
      if (s_projectServer.TryInvoke("plugins/v1/deserialize", dctx)
            && dctx.Outputs.TryGet("project", out project))
      {
        // server reports errors
        s_project = project;
      }
    }

    public override GH_LoadingInstruction PriorityLoad()
    {
      if (AssemblyInfo.PluginCategoryIcon is SD.Bitmap icon)
      {
        Grasshopper.Instances.ComponentServer.AddCategoryIcon("otepad", icon);
      }
      Grasshopper.Instances.ComponentServer.AddCategorySymbolName("otepad", "otepad"[0]);

      return GH_LoadingInstruction.Proceed;
    }

    public static bool TryCreateScript(GH_Component ghcomponent, string serialized, out object script)
    {
      script = default;

      if (s_projectServer is null) return false;

      dynamic dctx = ProjectInterop.CreateInvokeContext();
      dctx.Inputs["component"] = ghcomponent;
      dctx.Inputs["project"] = s_project;
      dctx.Inputs["scriptData"] = serialized;

      if (s_projectServer.TryInvoke("plugins/v1/gh/deserialize", dctx))
      {
        return dctx.Outputs.TryGet("script", out script);
      }

      return false;
    }

    public static void DisposeScript(GH_Component ghcomponent, object script)
    {
      if (script is null)
        return;

      dynamic dctx = ProjectInterop.CreateInvokeContext();
      dctx.Inputs["component"] = ghcomponent;
      dctx.Inputs["project"] = s_project;
      dctx.Inputs["script"] = script;

      if (!s_projectServer.TryInvoke("plugins/v1/gh/dispose", dctx))
        throw new Exception("Error disposing Grasshopper script component");
    }
  }
}
